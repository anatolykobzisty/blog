{"version":3,"sources":["components/GlobalStyle.jsx","actions/logout.js","actions/actionTypes.js","axios/index.js","actions/login.js","actions/autoLogin.js","components/NavBar.jsx","actions/register.js","pages/Authentication.jsx","pages/GlobalFeed.jsx","components/Content.jsx","reducers/auth.js","reducers/index.js","store.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","styledNormalize","logout","type","axios","create","baseURL","loginSuccess","token","loginFailure","errors","autoLogin","dispatch","localStorage","getItem","StyledNavBar","styled","div","Logo","Link","Menu","ul","MenuItem","li","StyledNavLink","NavLink","Logout","Button","connect","isAutheticated","auth","authLogout","to","exact","onClick","removeItem","registerSuccess","registerFailure","StyledAuthentication","Container","PageTitle","h1","DescriptionLink","p","FormItem","ErrorMessage","validationSchema","Yup","shape","username","max","required","email","password","matches","Authentication","handleFormSubmit","values","isSignUp","props","authLogin","authRegister","this","match","isLoading","authErrors","path","pageTitle","descriptionLink","descriptionText","errorMsgUsername","errorMsgEmail","errorMsgLogin","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","touched","name","placeholder","value","onChange","onBlur","prefix","style","color","htmlType","loading","block","Component","a","loginData","user","post","response","data","setItem","login","registerData","register","GlobalFeed","StyledContent","main","Content","component","initialState","authReducer","state","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","Header","Layout","Footer","StyledHeader","StyledFooter","ReactDOM","render","Date","getFullYear","document","getElementById"],"mappings":"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","file":"static/js/main.c9994929.chunk.js","sourcesContent":["import styledNormalize from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ${styledNormalize}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  ul,\n  ol,\n  li {\n    display: block;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import { LOGOUT } from './actionTypes';\n\nconst logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport default logout;\n","export const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT = 'LOGOUT';\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://conduit.productionready.io/api',\n});\n","import axios from '../axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from './actionTypes';\n\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST,\n  };\n};\n\nexport const loginSuccess = token => {\n  return {\n    type: LOGIN_SUCCESS,\n    token,\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAILURE,\n    errors,\n  };\n};\n\nexport const login = ({ email, password }) => async dispatch => {\n  dispatch(loginRequest());\n  const loginData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post('/users/login/', loginData);\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(loginSuccess(token));\n  } catch (error) {\n    const { errors } = error.response.data;\n    dispatch(loginFailure(errors));\n  }\n};\n","import logout from './logout';\nimport { loginSuccess } from './login';\n\nconst autoLogin = () => dispatch => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    dispatch(logout());\n  } else {\n    dispatch(loginSuccess(token));\n  }\n};\n\nexport default autoLogin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\n\nimport styled from 'styled-components/macro';\n\nimport logout from '../actions/logout';\n\nconst StyledNavBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Logo = styled(Link)`\n  font-weight: bold;\n  color: white;\n  font-size: 25px;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst MenuItem = styled.li`\n  margin-right: 10px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: white;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Logout = styled(Button)`\n  margin-left: 30px;\n`;\n\nconst NavBar = ({ isAutheticated, authLogout }) => {\n  const handleClick = () => {\n    localStorage.removeItem('token');\n    authLogout();\n  };\n  return (\n    <StyledNavBar>\n      <Logo to=\"/blog\">Blog</Logo>\n      <Menu>\n        <MenuItem>\n          <StyledNavLink to=\"/blog\" exact>\n            Home\n          </StyledNavLink>\n        </MenuItem>\n        {isAutheticated ? (\n          <Logout onClick={handleClick}>Log out</Logout>\n        ) : (\n          <>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/login\">Sign in</StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/signup\">Sign up</StyledNavLink>\n            </MenuItem>\n          </>\n        )}\n      </Menu>\n    </StyledNavBar>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  return { isAutheticated: !!auth.token };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogout: () => dispatch(logout()),\n  };\n};\n\nNavBar.propTypes = {\n  isAutheticated: PropTypes.bool.isRequired,\n  authLogout: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import axios from '../axios';\n\nimport { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from './actionTypes';\n\nexport const registerRequest = () => {\n  return {\n    type: REGISTER_REQUEST,\n  };\n};\n\nexport const registerSuccess = token => {\n  return {\n    type: REGISTER_SUCCESS,\n    token,\n  };\n};\n\nexport const registerFailure = errors => {\n  return {\n    type: REGISTER_FAILURE,\n    errors,\n  };\n};\n\nexport const register = ({ username, email, password }) => async dispatch => {\n  dispatch(registerRequest());\n  const registerData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post('/users/', registerData);\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(registerSuccess(token));\n  } catch (error) {\n    const { errors } = error.response.data;\n    dispatch(registerFailure(errors));\n  }\n};\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { Icon, Input, Button } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport styled from 'styled-components/macro';\n\nimport { register } from '../actions/register';\nimport { login } from '../actions/login';\n\nconst StyledAuthentication = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  color: #1890ff;\n  font-size: 40px;\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst DescriptionLink = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .matches(\n      /^(?=^.{8,40}$)[0-9a-zA-Z](?=.*[A-Z])(?=.*[0-9])/,\n      'The password has to contain: A-Z, a-z, 0-9'\n    )\n    .required('Required'),\n});\n\nclass Authentication extends Component {\n  handleFormSubmit = (values, isSignUp) => {\n    const { authLogin, authRegister } = this.props;\n    if (isSignUp) {\n      authRegister(values);\n    } else {\n      authLogin(values);\n    }\n  };\n\n  render() {\n    const { match, isAutheticated, isLoading, authErrors } = this.props;\n    const isSignUp = match.path === '/blog/signup';\n    const pageTitle = isSignUp ? 'Sign Up' : 'Sign In';\n    const descriptionLink = isSignUp ? '/blog/login' : '/blog/signup';\n    const descriptionText = isSignUp ? 'Have an account?' : 'Need an account?';\n    const errorMsgUsername = authErrors.username ? authErrors.username[0] : null;\n    const errorMsgEmail = authErrors.email ? authErrors.email[0] : null;\n    const errorMsgLogin = authErrors['email or password']\n      ? authErrors['email or password'][0]\n      : null;\n\n    if (isAutheticated) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <StyledAuthentication>\n        <Container>\n          <PageTitle>{pageTitle}</PageTitle>\n          <DescriptionLink>\n            <Link to={descriptionLink}>{descriptionText}</Link>\n          </DescriptionLink>\n          <Formik\n            initialValues={{\n              username: 'noname2020',\n              email: 'noname2020@mail.com',\n              password: '8Nkl8dsp',\n            }}\n            onSubmit={values => this.handleFormSubmit(values, isSignUp)}\n            validationSchema={validationSchema}\n          >\n            {({ handleSubmit, values, handleChange, handleBlur, touched, errors }) => {\n              return (\n                <Form onSubmit={handleSubmit}>\n                  {isSignUp && (\n                    <FormItem>\n                      <Input\n                        type=\"user\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        value={values.username}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      />\n                      {errorMsgUsername && (\n                        <ErrorMessage>Username {errorMsgUsername} </ErrorMessage>\n                      )}\n                      {touched.username && errors.username && (\n                        <ErrorMessage>{errors.username}</ErrorMessage>\n                      )}\n                    </FormItem>\n                  )}\n                  <FormItem>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {errorMsgEmail && <ErrorMessage>Email {errorMsgEmail} </ErrorMessage>}\n                    {touched.email && errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {errorMsgLogin && (\n                      <ErrorMessage>Email or password {errorMsgLogin} </ErrorMessage>\n                    )}\n                    {touched.password && errors.password && (\n                      <ErrorMessage>{errors.password}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} block>\n                    {pageTitle}\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </StyledAuthentication>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAutheticated: !!auth.token,\n    isLoading: auth.loading,\n    authErrors: auth.errors,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogin: values => dispatch(login(values)),\n    authRegister: values => dispatch(register(values)),\n  };\n};\n\nAuthentication.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  isAutheticated: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  authErrors: PropTypes.objectOf(PropTypes.array).isRequired,\n  authLogin: PropTypes.func.isRequired,\n  authRegister: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\n","import React from 'react';\n\nconst GlobalFeed = () => {\n  return <div>GlobalFeed</div>;\n};\n\nexport default GlobalFeed;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport styled from 'styled-components/macro';\n\nimport { Authentication, GlobalFeed } from '../pages';\n\nconst StyledContent = styled.main`\n  background: #ffffff;\n  padding: 0 150px;\n`;\n\nconst Content = () => {\n  return (\n    <StyledContent>\n      <Switch>\n        <Route path=\"/blog\" component={GlobalFeed} exact />\n        <Route path=\"/blog/login\" component={Authentication} />\n        <Route path=\"/blog/signup\" component={Authentication} />\n      </Switch>\n    </StyledContent>\n  );\n};\n\nexport default Content;\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n  loading: false,\n  errors: {\n    username: null,\n    email: null,\n    'email or password': null,\n  },\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        loading: false,\n      };\n    case REGISTER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errors: action.errors,\n      };\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        loading: false,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errors: action.errors,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport styled from 'styled-components/macro';\nimport GlobalStyle from './components/GlobalStyle';\n\nimport autoLogin from './actions/autoLogin';\n\nimport NavBar from './components/NavBar';\nimport Content from './components/Content';\n\nimport store from './store';\n\nstore.dispatch(autoLogin());\n\nconst { Header, Footer } = Layout;\n\nconst StyledHeader = styled(Header)`\n  background: #1890ff;\n  color: #ffffff;\n  padding: 0 150px;\n`;\n\nconst StyledFooter = styled(Footer)`\n  position: fixed;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  color: #ffffff;\n  text-align: center;\n  background: #1890ff;\n`;\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <GlobalStyle />\n      <Router>\n        <Layout>\n          <StyledHeader>\n            <NavBar />\n          </StyledHeader>\n          <Content />\n          <StyledFooter>Blog © {new Date().getFullYear()}</StyledFooter>\n        </Layout>\n      </Router>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}