{"version":3,"sources":["components/GlobalStyle.jsx","components/Loader.jsx","axios/index.js","actions/logout.js","actions/actionTypes.js","components/NavBar.jsx","actions/register.js","actions/login.js","pages/Authentication.jsx","pages/GlobalFeed.jsx","components/Content.jsx","actions/autoLogin.js","components/App.jsx","reducers/auth.js","reducers/index.js","store.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","styledNormalize","Container","styled","div","Loader","size","tip","axios","create","baseURL","logout","localStorage","removeItem","defaults","headers","common","Authorization","type","StyledNavBar","Logo","Link","Menu","ul","MenuItem","li","StyledNavLink","NavLink","NavBar","isAutheticated","user","authLogout","to","exact","onClick","defaultProps","connect","auth","currentUser","token","username","dispatch","registerSuccess","registerFailure","errors","loginSuccess","loginFailure","StyledAuthentication","PageTitle","h1","DescriptionLink","p","FormItem","ErrorMessage","validationSchema","Yup","shape","max","required","email","password","matches","Authentication","handleFormSubmit","values","isSignUp","props","authLogin","authRegister","this","match","isAuthenticated","isLoading","path","pageTitle","descriptionLink","descriptionText","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","touched","name","placeholder","value","onChange","onBlur","prefix","style","color","htmlType","loading","block","Component","a","loginData","post","response","data","setItem","login","registerData","register","GlobalFeed","StyledContent","main","Content","component","autoLoginSuccess","Page","Header","header","App","componentDidMount","authAutoLogin","getItem","console","log","initialState","authReducer","state","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e4f15a3.chunk.js","sourcesContent":["import styledNormalize from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ${styledNormalize}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  ul,\n  ol,\n  li {\n    display: block;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport styled from 'styled-components/macro';\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Spin size=\"large\" tip=\"Loading...\" />\n    </Container>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://conduit.productionready.io/api',\n});\n","import axios from '../axios';\nimport { LOGOUT } from './actionTypes';\n\nconst logout = () => {\n  localStorage.removeItem('token');\n  delete axios.defaults.headers.common.Authorization;\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport default logout;\n","export const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const AUTO_LOGIN_REQUEST = 'AUTO_LOGIN_REQUEST';\nexport const AUTO_LOGIN_SUCCESS = 'AUTO_LOGIN_SUCCESS';\nexport const AUTO_LOGIN_FAILURE = 'AUTO_LOGIN_FAILURE';\n\nexport const LOGOUT = 'LOGOUT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\n\nimport styled from 'styled-components/macro';\n\nimport logout from '../actions/logout';\n\nconst StyledNavBar = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled(Link)`\n  font-weight: bold;\n  color: white;\n  font-size: 25px;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n`;\n\nconst MenuItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: white;\n  :hover {\n    color: black;\n  }\n`;\n\nconst NavBar = ({ isAutheticated, user, authLogout }) => {\n  const handleClick = () => {\n    authLogout();\n  };\n  return (\n    <StyledNavBar>\n      <Logo to=\"/blog\">Blog</Logo>\n      <Menu>\n        {isAutheticated ? null : (\n          <>\n            <MenuItem>\n              <StyledNavLink to=\"/blog\" exact>\n                Home\n              </StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/login\">Sign in</StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/signup\">Sign up</StyledNavLink>\n            </MenuItem>\n          </>\n        )}\n        {isAutheticated ? (\n          <>\n            <MenuItem>\n              <Button onClick={handleClick}>Log out</Button>\n            </MenuItem>\n            <MenuItem>\n              <span>{user}</span>\n            </MenuItem>\n          </>\n        ) : null}\n      </Menu>\n    </StyledNavBar>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAutheticated: !!auth.currentUser.token,\n    user: auth.currentUser.username,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogout: () => dispatch(logout()),\n  };\n};\n\nNavBar.propTypes = {\n  isAutheticated: PropTypes.bool.isRequired,\n  user: PropTypes.string,\n  authLogout: PropTypes.func.isRequired,\n};\n\nNavBar.defaultProps = {\n  user: null,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import axios from '../axios';\n\nimport { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from './actionTypes';\n\nexport const registerRequest = () => {\n  return {\n    type: REGISTER_REQUEST,\n  };\n};\n\nexport const registerSuccess = user => {\n  return {\n    type: REGISTER_SUCCESS,\n    user,\n  };\n};\n\nexport const registerFailure = errors => {\n  return {\n    type: REGISTER_FAILURE,\n    errors,\n  };\n};\n\nexport const register = ({ username, email, password }) => async dispatch => {\n  dispatch(registerRequest());\n  const registerData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post('/users/', registerData);\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(registerSuccess(user));\n  } catch (error) {\n    const { errors } = error.response.data;\n    dispatch(registerFailure(errors));\n  }\n};\n","import axios from '../axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from './actionTypes';\n\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST,\n  };\n};\n\nexport const loginSuccess = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user,\n  };\n};\n\nexport const loginFailure = errors => {\n  return {\n    type: LOGIN_FAILURE,\n    errors,\n  };\n};\n\nexport const login = ({ email, password }) => async dispatch => {\n  dispatch(loginRequest());\n  const loginData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post('/users/login/', loginData);\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(loginSuccess(user));\n  } catch (error) {\n    const { errors } = error.response.data;\n    dispatch(loginFailure(errors));\n  }\n};\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { Icon, Input, Button } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport styled from 'styled-components/macro';\n\nimport { register } from '../actions/register';\nimport { login } from '../actions/login';\n\nconst StyledAuthentication = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  color: #1890ff;\n  font-size: 40px;\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst DescriptionLink = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .matches(\n      /^(?=^.{8,40}$)[0-9a-zA-Z](?=.*[A-Z])(?=.*[0-9])/,\n      'The password has to contain: A-Z, a-z, 0-9'\n    )\n    .required('Required'),\n});\n\nclass Authentication extends Component {\n  handleFormSubmit = (values, isSignUp) => {\n    const { authLogin, authRegister } = this.props;\n    if (isSignUp) {\n      authRegister(values);\n    } else {\n      authLogin(values);\n    }\n  };\n\n  render() {\n    const { match, isAuthenticated, isLoading } = this.props;\n    const isSignUp = match.path === '/blog/signup';\n    const pageTitle = isSignUp ? 'Sign Up' : 'Sign In';\n    const descriptionLink = isSignUp ? '/blog/login' : '/blog/signup';\n    const descriptionText = isSignUp ? 'Have an account?' : 'Need an account?';\n    // const errorMsgUsername = authErrors.username ? authErrors.username[0] : null;\n    // const errorMsgEmail = authErrors.email ? authErrors.email[0] : null;\n    // const errorMsgLogin = authErrors['email or password']\n    //   ? authErrors['email or password'][0]\n    //   : null;\n\n    if (isAuthenticated) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <StyledAuthentication>\n        <Container>\n          <PageTitle>{pageTitle}</PageTitle>\n          <DescriptionLink>\n            <Link to={descriptionLink}>{descriptionText}</Link>\n          </DescriptionLink>\n          <Formik\n            initialValues={{\n              username: 'noname-2020',\n              email: 'noname-2020@mail.com',\n              password: '8Nkl8dsp',\n            }}\n            onSubmit={values => this.handleFormSubmit(values, isSignUp)}\n            validationSchema={validationSchema}\n          >\n            {({ handleSubmit, values, handleChange, handleBlur, touched, errors }) => {\n              return (\n                <Form onSubmit={handleSubmit}>\n                  {isSignUp && (\n                    <FormItem>\n                      <Input\n                        type=\"user\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        value={values.username}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      />\n                      {/* {errorMsgUsername && (\n                        <ErrorMessage>Username {errorMsgUsername} </ErrorMessage>\n                      )} */}\n                      {touched.username && errors.username && (\n                        <ErrorMessage>{errors.username}</ErrorMessage>\n                      )}\n                    </FormItem>\n                  )}\n                  <FormItem>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {/* {errorMsgEmail && <ErrorMessage>Email {errorMsgEmail} </ErrorMessage>} */}\n                    {touched.email && errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {/* {errorMsgLogin && (\n                      <ErrorMessage>Email or password {errorMsgLogin} </ErrorMessage>\n                    )} */}\n                    {touched.password && errors.password && (\n                      <ErrorMessage>{errors.password}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} block>\n                    {pageTitle}\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </StyledAuthentication>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isAuthenticated: !!auth.currentUser.token,\n    isLoading: auth.loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogin: values => dispatch(login(values)),\n    authRegister: values => dispatch(register(values)),\n  };\n};\n\nAuthentication.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  // authErrors: PropTypes.objectOf(PropTypes.array).isRequired,\n  authLogin: PropTypes.func.isRequired,\n  authRegister: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\n","import React from 'react';\n\nconst GlobalFeed = () => {\n  return <div>GlobalFeed</div>;\n};\n\nexport default GlobalFeed;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport styled from 'styled-components/macro';\n\nimport { Authentication, GlobalFeed } from '../pages';\n\nconst StyledContent = styled.main`\n  padding: 0 20px;\n`;\n\nconst Content = () => {\n  return (\n    <StyledContent>\n      <Switch>\n        <Route path=\"/blog\" component={GlobalFeed} exact />\n        <Route path=\"/blog/login\" component={Authentication} />\n        <Route path=\"/blog/signup\" component={Authentication} />\n      </Switch>\n    </StyledContent>\n  );\n};\n\nexport default Content;\n","import axios from '../axios';\nimport { AUTO_LOGIN_REQUEST, AUTO_LOGIN_SUCCESS, AUTO_LOGIN_FAILURE } from './actionTypes';\n\nexport const autoLoginRequest = () => {\n  return {\n    type: AUTO_LOGIN_REQUEST,\n  };\n};\n\nexport const autoLoginSuccess = user => {\n  return {\n    type: AUTO_LOGIN_SUCCESS,\n    user,\n  };\n};\n\nexport const autoLoginFailure = () => {\n  return {\n    type: AUTO_LOGIN_FAILURE,\n  };\n};\n\nexport const autoLogin = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    dispatch(autoLoginRequest());\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\n    try {\n      const response = await axios('/user/');\n      const user = await response.data.user;\n      console.log(user);\n      dispatch(autoLoginSuccess(user));\n    } catch (error) {\n      // const { errors } = error.response.data;\n      dispatch(autoLoginFailure());\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport styled from 'styled-components/macro';\nimport GlobalStyle from './GlobalStyle';\n\nimport Loader from './Loader';\nimport NavBar from './NavBar';\nimport Content from './Content';\n\nimport { autoLogin } from '../actions/autoLogin';\n\nconst Page = styled.div`\n  width: 1100px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 60px;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  background: #1890ff;\n  color: #ffffff;\n  padding: 0 20px;\n`;\n\nclass App extends Component {\n  componentDidMount = () => {\n    const { authAutoLogin } = this.props;\n    authAutoLogin();\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <>\n        <GlobalStyle />\n        <Router>\n          <Page>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                <Header>\n                  <NavBar />\n                </Header>\n                <Content />\n              </>\n            )}\n          </Page>\n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return {\n    isLoading: auth.loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authAutoLogin: () => dispatch(autoLogin()),\n});\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  authAutoLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  AUTO_LOGIN_REQUEST,\n  AUTO_LOGIN_SUCCESS,\n  AUTO_LOGIN_FAILURE,\n  LOGOUT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  currentUser: {},\n  loading: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.user,\n        loading: false,\n      };\n    case REGISTER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.user,\n        loading: false,\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case AUTO_LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case AUTO_LOGIN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.user,\n        loading: false,\n      };\n    case AUTO_LOGIN_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        currentUser: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}