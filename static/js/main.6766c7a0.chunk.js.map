{"version":3,"sources":["components/GlobalStyle.jsx","components/Loader.jsx","axios/index.js","actions/logoutUser.js","actions/actionTypes.js","components/NavBar.jsx","utils/showMessageNetError.js","actions/getUser.js","pages/SignUp.jsx","pages/SignIn.jsx","components/TagList.jsx","actions/handleLikeArticle.js","components/AddToFavorites.jsx","components/Feed.jsx","actions/getArticles.js","pages/GlobalFeed.jsx","actions/getArticle.js","actions/cleanArticle.js","pages/Article.jsx","actions/deleteArticle.js","pages/CreateArticle.jsx","pages/EditArticle.jsx","components/Content.jsx","components/App.jsx","reducers/user.js","reducers/multipleArticles.js","reducers/singleArticle.js","reducers/index.js","store.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","styledNormalize","Container","styled","div","Loader","size","tip","axios","Axios","create","baseURL","logout","localStorage","removeItem","defaults","headers","common","Authorization","type","StyledNavBar","Logo","Link","Menu","ul","MenuItem","li","StyledNavLink","NavLink","NavBar","isAutheticated","user","to","exact","onClick","defaultProps","connect","loggedIn","currentUser","username","dispatch","logoutUser","showMessageNetError","error","response","status","message","getUserSuccess","StyledSignUp","PageTitle","h1","DescriptionLink","p","FormItem","ErrorMessage","span","validationSchema","Yup","shape","required","email","password","SignUp","handleSubmit","values","actions","a","getUser","props","navigator","onLine","post","data","token","setItem","setSubmitting","setErrors","errors","this","isAuthenticated","initialValues","onSubmit","handleChange","handleBlur","touched","isSubmitting","name","placeholder","value","onChange","onBlur","prefix","style","color","htmlType","disabled","block","Component","StyledSignIn","SignIn","StyledTaglist","Tag","TagList","tags","map","tag","key","handleLikeArticle","article","StyledAddToFavorites","Button","AddToFavorites","state","isLoading","handleClick","isFavorited","handleButtonAddToFavorites","slug","method","setState","url","favoritesCount","loading","theme","fontSize","Article","ArticlePreview","ArticleMeta","AvatarAuthorArticle","Info","NameAuthorArticle","DateArticle","ArticleContent","ArticleTitle","ArticleDescription","ArticleFooter","articles","multipleArticles","createdAt","width","height","src","author","image","alt","formatDistance","Date","addSuffix","favorited","title","description","tagList","getArticlesSuccess","articlesCount","StyledGlobalFeed","StyledPagination","Pagination","GlobalFeed","current","componentDidMount","showArticles","page","pageSize","total","offset","get","params","limit","getArticles","getArticleSuccess","getArticle","cleanArticle","StyledArticle","Banner","ButtonEdit","ButtonDelete","button","ArticleBody","BodyWrap","Body","isAuthor","handleClickButtonDelete","match","delArticle","history","push","showArticle","emptyArticle","body","withRouter","singleArticle","delete","deleteArticle","TextArea","Input","StyledCreateArticle","ArticleForm","ButtonWrap","TagInput","field","of","CreateArticle","isSubmitted","addArticle","getItem","rows","allowClear","render","arrayHelpers","length","index","component","remove","insert","StyledEditArticle","EditArticle","fetchArticle","updateArticle","put","pick","setUpdateValuesForm","Content","path","Page","Header","header","App","getCurrentUser","initialState","userReducer","action","multipleArticlesReducer","singleArticleReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6766c7a0.chunk.js","sourcesContent":["import styledNormalize from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ${styledNormalize}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  ul,\n  ol,\n  li {\n    display: block;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport styled from 'styled-components/macro';\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Spin size=\"large\" tip=\"Loading...\" />\n    </Container>\n  );\n};\n\nexport default Loader;\n","import Axios from 'axios';\n\nconst axios = Axios.create({\n  baseURL: 'https://conduit.productionready.io/api',\n});\n\nexport default axios;\n","import axios from '../axios';\nimport { LOGOUT_USER } from './actionTypes';\n\nconst logout = () => {\n  localStorage.removeItem('token');\n  delete axios.defaults.headers.common.Authorization;\n  return {\n    type: LOGOUT_USER,\n  };\n};\n\nexport default logout;\n","// user\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\n\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\n// multipleArticles\nexport const GET_ARTICLES_REQUEST = 'GET_ARTICLES_REQUEST';\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCESS';\nexport const GET_ARTICLES_FAILURE = 'GET_ARTICLES_FAILURE';\n\n// singleArticle\nexport const GET_ARTICLE_REQUEST = 'GET_ARTICLE_REQUEST';\nexport const GET_ARTICLE_SUCCESS = 'GET_ARTICLE_SUCCESS';\nexport const GET_ARTICLE_FAILURE = 'GET_ARTICLE_FAILURE';\n\nexport const DELETE_ARTICLE_REQUEST = 'DELETE_ARTICLE_REQUEST';\nexport const DELETE_ARTICLE_SUCCESS = 'DELETE_ARTICLE_SUCCESS';\nexport const DELETE_ARTICLE_FAILURE = 'DELETE_ARTICLE_FAILURE ';\n\nexport const HANDLE_LIKE_ARTICLE = 'HANDLE_LIKE_ARTICLE';\n\nexport const CLEAN_ARTICLE = 'CLEAN_ARTICLE ';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\n\nimport styled from 'styled-components/macro';\n\nimport logoutUser from '../actions/logoutUser';\n\nconst StyledNavBar = styled.div`\n  width: 1100px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Logo = styled(Link)`\n  font-weight: bold;\n  color: white;\n  font-size: 25px;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n`;\n\nconst MenuItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: white;\n  :hover {\n    color: black;\n  }\n`;\n\nconst NavBar = ({ isAutheticated, user, logout }) => {\n  const handleClick = () => {\n    logout();\n  };\n  return (\n    <StyledNavBar>\n      <Logo to=\"/blog\">Blog</Logo>\n      <Menu>\n        <MenuItem>\n          <StyledNavLink to=\"/blog\" exact>\n            Home\n          </StyledNavLink>\n        </MenuItem>\n        {!isAutheticated && (\n          <>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/login\">Sign in</StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/signup\">Sign up</StyledNavLink>\n            </MenuItem>\n          </>\n        )}\n        {isAutheticated && (\n          <>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/articles/new\">New Post</StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <Button onClick={handleClick}>Log out</Button>\n            </MenuItem>\n            <MenuItem>\n              <span>{user}</span>\n            </MenuItem>\n          </>\n        )}\n      </Menu>\n    </StyledNavBar>\n  );\n};\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    isAutheticated: user.loggedIn,\n    user: user.currentUser.username,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(logoutUser()),\n  };\n};\n\nNavBar.propTypes = {\n  isAutheticated: PropTypes.bool.isRequired,\n  user: PropTypes.string,\n  logout: PropTypes.func.isRequired,\n};\n\nNavBar.defaultProps = {\n  user: null,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import { message } from 'antd';\n\nconst showMessageNetError = error => {\n  if (error.response.status === 404) {\n    message.error('Not found requests');\n  } else if (error.response.status === 403) {\n    message.error('Forbidden requests');\n  } else if (error.response.status === 401) {\n    message.error('Unauthorized requests');\n  } else {\n    message.error('Something went wrong');\n  }\n};\n\nexport default showMessageNetError;\n","import axios from '../axios';\n\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE } from './actionTypes';\n\nexport const getUserRequest = () => {\n  return {\n    type: GET_USER_REQUEST,\n  };\n};\n\nexport const getUserSuccess = user => {\n  return {\n    type: GET_USER_SUCCESS,\n    user,\n  };\n};\n\nexport const getUserFailure = () => {\n  return {\n    type: GET_USER_FAILURE,\n  };\n};\n\nexport const getUser = () => async dispatch => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    dispatch(getUserRequest());\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\n    try {\n      const response = await axios('/user/');\n      if (response.status === 200) {\n        const user = await response.data.user;\n        dispatch(getUserSuccess(user));\n      }\n    } catch (error) {\n      showMessageNetError(error);\n      dispatch(getUserFailure());\n    }\n  } else {\n    dispatch(getUserFailure());\n  }\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Icon, Input, Button, message } from 'antd';\n\nimport styled from 'styled-components/macro';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport axios from '../axios';\n\nimport { getUserSuccess } from '../actions/getUser';\n\nconst StyledSignUp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  color: #1890ff;\n  font-size: 40px;\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst DescriptionLink = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string().required('required'),\n  email: Yup.string().required('required'),\n  password: Yup.string().required('required'),\n});\n\nclass SignUp extends Component {\n  handleSubmit = async (values, actions) => {\n    const { getUser } = this.props;\n    if (navigator.onLine) {\n      try {\n        const response = await axios.post('/users/', {\n          user: values,\n        });\n        if (response.status === 200) {\n          const user = await response.data.user;\n          const token = await user.token;\n          localStorage.setItem('token', token);\n          getUser(user);\n          actions.setSubmitting(false);\n        }\n      } catch (error) {\n        actions.setSubmitting(false);\n        if (error.response.status === 422) {\n          actions.setErrors(error.response.data.errors);\n        } else {\n          showMessageNetError(error);\n        }\n      }\n    } else {\n      actions.setSubmitting(false);\n      message.error('Please check your network connectivity');\n    }\n  };\n\n  render() {\n    const { isAuthenticated } = this.props;\n\n    if (isAuthenticated) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <StyledSignUp>\n        <Container>\n          <PageTitle>Sign Up</PageTitle>\n          <DescriptionLink>\n            <Link to=\"/blog/login\">Have an account?</Link>\n          </DescriptionLink>\n          <Formik\n            initialValues={{\n              username: '',\n              email: '',\n              password: '',\n            }}\n            onSubmit={(values, actions) => this.handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n          >\n            {({\n              handleSubmit,\n              values,\n              handleChange,\n              handleBlur,\n              touched,\n              isSubmitting,\n              errors,\n            }) => {\n              return (\n                <Form onSubmit={handleSubmit}>\n                  <FormItem>\n                    <Input\n                      type=\"user\"\n                      name=\"username\"\n                      placeholder=\"Username\"\n                      value={values.username}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.username && errors.username && (\n                      <ErrorMessage>{`username ${errors.username}`}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.email && errors.email && (\n                      <ErrorMessage>{`email ${errors.email}`}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.password && errors.password && (\n                      <ErrorMessage>{`password ${errors.password}`}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting} block>\n                    sign up\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </StyledSignUp>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    isAuthenticated: user.loggedIn,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: values => dispatch(getUserSuccess(values)),\n  };\n};\n\nSignUp.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Icon, Input, Button, message } from 'antd';\n\nimport styled from 'styled-components/macro';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport axios from '../axios';\n\nimport { getUserSuccess } from '../actions/getUser';\n\nconst StyledSignIn = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  color: #1890ff;\n  font-size: 40px;\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst DescriptionLink = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('required'),\n  password: Yup.string().required('required'),\n});\n\nclass SignIn extends Component {\n  handleSubmit = async (values, actions) => {\n    const { getUser } = this.props;\n    if (navigator.onLine) {\n      try {\n        const response = await axios.post('/users/login/', {\n          user: values,\n        });\n        if (response.status === 200) {\n          const user = await response.data.user;\n          const token = await user.token;\n          axios.defaults.headers.common.Authorization = `Token ${token}`;\n          localStorage.setItem('token', token);\n          getUser(user);\n          actions.setSubmitting(false);\n        }\n      } catch (error) {\n        actions.setSubmitting(false);\n        if (error.response.status === 422) {\n          actions.setErrors(error.response.data.errors);\n        } else {\n          showMessageNetError(error);\n        }\n      }\n    } else {\n      actions.setSubmitting(false);\n      message.error('Please check your network connectivity');\n    }\n  };\n\n  render() {\n    const { isAuthenticated } = this.props;\n\n    if (isAuthenticated) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <StyledSignIn>\n        <Container>\n          <PageTitle>Sign In</PageTitle>\n          <DescriptionLink>\n            <Link to=\"/blog/signup\">Need an account?</Link>\n          </DescriptionLink>\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n            }}\n            onSubmit={(values, actions) => this.handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n          >\n            {({\n              handleSubmit,\n              values,\n              handleChange,\n              handleBlur,\n              touched,\n              isSubmitting,\n              errors,\n            }) => {\n              return (\n                <Form onSubmit={handleSubmit}>\n                  <FormItem>\n                    {errors['email or password'] && (\n                      <ErrorMessage>\n                        {`email or password ${errors['email or password']}`}\n                      </ErrorMessage>\n                    )}\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.email && errors.email && (\n                      <ErrorMessage>{`email ${errors.email}`}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.password && errors.password && (\n                      <ErrorMessage>{`password ${errors.password}`}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting} block>\n                    sign in\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </StyledSignIn>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    isAuthenticated: user.loggedIn,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: values => dispatch(getUserSuccess(values)),\n  };\n};\n\nSignIn.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport styled from 'styled-components/macro';\n\nconst StyledTaglist = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Tag = styled.li`\n  color: white;\n  background-color: #1890ff;\n  padding: 5px 10px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n`;\n\nconst TagList = ({ tags }) => {\n  return (\n    <>\n      <StyledTaglist>\n        {tags.map(tag => (\n          <Tag key={tag}>{tag}</Tag>\n        ))}\n      </StyledTaglist>\n    </>\n  );\n};\n\nTagList.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default TagList;\n","import { HANDLE_LIKE_ARTICLE } from './actionTypes';\n\nconst handleLikeArticle = article => {\n  return {\n    type: HANDLE_LIKE_ARTICLE,\n    article,\n  };\n};\nexport default handleLikeArticle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styled from 'styled-components/macro';\nimport { Button, Icon, message } from 'antd';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport axios from '../axios';\n\nimport handleLikeArticle from '../actions/handleLikeArticle';\n\nconst StyledAddToFavorites = styled(Button)`\n  width: 60px;\n`;\nclass AddToFavorites extends Component {\n  state = {\n    isLoading: false,\n  };\n\n  handleClick = async () => {\n    const { isFavorited, handleButtonAddToFavorites, slug } = this.props;\n    const method = isFavorited ? 'delete' : 'post';\n    this.setState({ isLoading: true });\n    if (navigator.onLine) {\n      try {\n        const response = await axios({ method: `${method}`, url: `/articles/${slug}/favorite` });\n        if (response.status === 200) {\n          const article = await response.data.article;\n          handleButtonAddToFavorites(article);\n          this.setState({ isLoading: false });\n        }\n      } catch (error) {\n        showMessageNetError(error);\n        this.setState({ isLoading: false });\n      }\n    } else {\n      message.error('Please check your network connectivity');\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { isFavorited, favoritesCount, isAuthenticated } = this.props;\n    const { isLoading } = this.state;\n    return (\n      <>\n        <StyledAddToFavorites\n          onClick={this.handleClick}\n          loading={isLoading}\n          disabled={!isAuthenticated}\n        >\n          {!isLoading ? (\n            <>\n              <Icon\n                type=\"heart\"\n                theme={isFavorited ? 'filled' : 'outlined'}\n                style={{ fontSize: '13px', color: '#1890ff' }}\n              />\n              <span>&nbsp;{favoritesCount}</span>\n            </>\n          ) : null}\n        </StyledAddToFavorites>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    isAuthenticated: user.loggedIn,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleButtonAddToFavorites: (method, slug) => dispatch(handleLikeArticle(method, slug)),\n  };\n};\n\nAddToFavorites.propTypes = {\n  isFavorited: PropTypes.bool.isRequired,\n  favoritesCount: PropTypes.number.isRequired,\n  slug: PropTypes.string.isRequired,\n  handleButtonAddToFavorites: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToFavorites);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formatDistance } from 'date-fns';\n\nimport styled from 'styled-components/macro';\n\nimport TagList from './TagList';\nimport AddToFavorites from './AddToFavorites';\n\nconst Article = styled.div`\n  width: 900px;\n  border: 2px solid #1890ff;\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  padding: 20px 0;\n  :first-child {\n    border: 2px solid #1890ff;\n    border-left: none;\n    border-right: none;\n  }\n`;\n\nconst ArticlePreview = styled.div``;\n\nconst ArticleMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nconst AvatarAuthorArticle = styled.div`\n  width: 45px;\n  height: 45px;\n  margin-right: 15px;\n  border: 1px solid #1890ff;\n  overflow: hidden;\n`;\n\nconst Info = styled.div``;\n\nconst NameAuthorArticle = styled.div`\n  color: #1890ff;\n  font-size: 16px;\n`;\n\nconst DateArticle = styled.span`\n  font-size: 12px;\n`;\n\nconst ArticleContent = styled.div`\n  width: 100%;\n`;\n\nconst ArticleTitle = styled.h1`\n  font-size: 24px;\n  word-wrap: break-word;\n  margin: 0;\n`;\n\nconst ArticleDescription = styled.p`\n  color: black;\n  font-size: 15px;\n  word-wrap: break-word;\n`;\n\nconst ArticleFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Feed = ({ articles }) => {\n  return (\n    <>\n      {articles.map(article => (\n        <Article key={article.createdAt}>\n          <ArticlePreview>\n            <ArticleMeta>\n              <div>\n                <AvatarAuthorArticle>\n                  <img width=\"45px\" height=\"45px\" src={article.author.image} alt=\"\" />\n                </AvatarAuthorArticle>\n                <Info>\n                  <NameAuthorArticle>{article.author.username}</NameAuthorArticle>\n                  <DateArticle>\n                    {`Created ${formatDistance(new Date(article.createdAt), new Date(), {\n                      addSuffix: true,\n                    })}`}\n                  </DateArticle>\n                </Info>\n              </div>\n              <AddToFavorites\n                isFavorited={article.favorited}\n                favoritesCount={article.favoritesCount}\n                slug={article.slug}\n              />\n            </ArticleMeta>\n          </ArticlePreview>\n          <Link to={`/blog/articles/${article.slug}`}>\n            <ArticleContent>\n              <ArticleTitle>{article.title}</ArticleTitle>\n              <ArticleDescription>{article.description}</ArticleDescription>\n              <ArticleFooter>\n                <TagList tags={article.tagList} />\n              </ArticleFooter>\n            </ArticleContent>\n          </Link>\n        </Article>\n      ))}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ multipleArticles }) => {\n  return {\n    articles: multipleArticles.articles,\n  };\n};\n\nFeed.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps)(Feed);\n","import { message } from 'antd';\nimport axios from '../axios';\n\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport { GET_ARTICLES_REQUEST, GET_ARTICLES_SUCCESS, GET_ARTICLES_FAILURE } from './actionTypes';\n\nexport const getArticlesRequest = () => {\n  return {\n    type: GET_ARTICLES_REQUEST,\n  };\n};\n\nexport const getArticlesSuccess = (articles, articlesCount) => {\n  return {\n    type: GET_ARTICLES_SUCCESS,\n    articles,\n    articlesCount,\n  };\n};\n\nexport const getArticlesFailure = () => {\n  return {\n    type: GET_ARTICLES_FAILURE,\n  };\n};\n\nexport const getArticles = (offset = 0, pageSize = 10) => async dispatch => {\n  dispatch(getArticlesRequest());\n  if (navigator.onLine) {\n    try {\n      const response = await axios.get('/articles', {\n        params: {\n          offset,\n          limit: pageSize,\n        },\n      });\n      if (response.status === 200) {\n        const articles = await response.data.articles;\n        const articlesCount = await response.data.articlesCount;\n        dispatch(getArticlesSuccess(articles, articlesCount));\n      }\n    } catch (error) {\n      showMessageNetError(error);\n      dispatch(getArticlesSuccess());\n    }\n  } else {\n    dispatch(getArticlesFailure());\n    message.error('Please check your network connectivity');\n  }\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styled from 'styled-components/macro';\n\nimport { Pagination } from 'antd';\nimport Feed from '../components/Feed';\n\nimport { getArticles } from '../actions/getArticles';\n\nconst StyledGlobalFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n`;\n\nconst Loader = styled.div`\n  font-size: 16px;\n  color: #1890ff;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport class GlobalFeed extends Component {\n  state = {\n    current: 1,\n  };\n\n  componentDidMount = () => {\n    const { showArticles } = this.props;\n    showArticles();\n  };\n\n  onChange = (page, pageSize) => {\n    this.setState({\n      current: page,\n    });\n    const { showArticles } = this.props;\n    const offset = page * 10 - pageSize;\n    showArticles(offset, pageSize);\n  };\n\n  render() {\n    const { current } = this.state;\n    const { isLoading, articles, articlesCount } = this.props;\n    return (\n      <>\n        <StyledGlobalFeed>\n          {isLoading && <Loader>Loading...</Loader>}\n          {!isLoading && articles && (\n            <>\n              <Feed articles={articles} />\n              <StyledPagination\n                total={articlesCount}\n                current={current}\n                pageSize={10}\n                onChange={this.onChange}\n              />\n            </>\n          )}\n        </StyledGlobalFeed>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ multipleArticles }) => {\n  return {\n    isLoading: multipleArticles.loading,\n    articles: multipleArticles.articles,\n    articlesCount: multipleArticles.articlesCount,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showArticles: (offset, pageSize) => dispatch(getArticles(offset, pageSize)),\n  };\n};\n\nGlobalFeed.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  articles: PropTypes.arrayOf(PropTypes.any).isRequired,\n  showArticles: PropTypes.func.isRequired,\n  articlesCount: PropTypes.number,\n};\n\nGlobalFeed.defaultProps = {\n  articlesCount: null,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalFeed);\n","import axios from '../axios';\n\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport { GET_ARTICLE_REQUEST, GET_ARTICLE_SUCCESS, GET_ARTICLE_FAILURE } from './actionTypes';\n\nexport const getArticleRequest = () => {\n  return {\n    type: GET_ARTICLE_REQUEST,\n  };\n};\n\nexport const getArticleSuccess = article => {\n  return {\n    type: GET_ARTICLE_SUCCESS,\n    article,\n  };\n};\n\nexport const getArticleFailure = () => {\n  return {\n    type: GET_ARTICLE_FAILURE,\n  };\n};\n\nexport const getArticle = slug => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    const response = await axios.get(`/articles/${slug}`);\n    if (response.status === 200) {\n      const article = await response.data.article;\n      dispatch(getArticleSuccess(article));\n    }\n  } catch (error) {\n    showMessageNetError(error);\n    dispatch(getArticleFailure());\n  }\n};\n","import { CLEAN_ARTICLE } from './actionTypes';\n\nconst cleanArticle = () => {\n  return {\n    type: CLEAN_ARTICLE,\n  };\n};\n\nexport default cleanArticle;\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { formatDistance } from 'date-fns';\nimport size from 'lodash/size';\n\nimport styled from 'styled-components/macro';\n\nimport Loader from '../components/Loader';\nimport Taglist from '../components/TagList';\nimport AddToFavorites from '../components/AddToFavorites';\n\nimport { getArticle } from '../actions/getArticle';\nimport { deleteArticle } from '../actions/deleteArticle';\nimport cleanArticle from '../actions/cleanArticle';\n\nconst StyledArticle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Banner = styled.div`\n  width: 100%;\n  padding-top: 35px;\n  padding-bottom: 30px;\n  border-top: 1px solid #1890ff;\n  border-bottom: 1px solid #1890ff;\n`;\n\nconst Container = styled.div`\n  width: 1100px;\n  margin: 0 auto;\n`;\n\nconst ArticleTitle = styled.h1`\n  word-wrap: break-word;\n  font-size: 44px;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nconst ArticleMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;\n\nconst AvatarAuthorArticle = styled.div`\n  width: 45px;\n  height: 45px;\n  margin-right: 15px;\n  border: 1px solid #1890ff;\n  overflow: hidden;\n`;\n\nconst Info = styled.div``;\n\nconst NameAuthorArticle = styled.div`\n  color: #1890ff;\n  font-size: 16px;\n`;\n\nconst DateArticle = styled.span`\n  font-size: 12px;\n`;\n\nconst ButtonEdit = styled(Link)`\n  border: 1px solid #1890ff;\n  display: inline-block;\n  padding: 5px 10px;\n  text-decoration: none;\n  color: #1890ff;\n  margin-right: 10px;\n  :hover {\n    background-color: #1890ff;\n    color: white;\n  }\n`;\n\nconst ButtonDelete = styled.button`\n  padding: 5px 10px;\n  font: inherit;\n  border: 1px solid #1890ff;\n  background-color: white;\n  color: #1890ff;\n  cursor: pointer;\n  :hover {\n    background-color: #1890ff;\n    color: white;\n  }\n`;\n\nconst ArticleContent = styled.div`\n  padding-top: 30px;\n`;\n\nconst ArticleBody = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst BodyWrap = styled.div`\n  width: 100%;\n  padding: 10px;\n  padding-top: 0;\n`;\n\nconst Body = styled.p`\n  word-wrap: break-word;\n`;\n\nclass Article extends Component {\n  componentDidMount() {\n    const { match, showArticle, emptyArticle } = this.props;\n    const { slug } = match.params;\n    showArticle(slug);\n    emptyArticle();\n  }\n\n  isAuthor = () => {\n    const { currentUser, article } = this.props;\n    if (!size(article) || !size(currentUser)) {\n      return false;\n    }\n    return article.author.username === currentUser.username;\n  };\n\n  handleClickButtonDelete = () => {\n    const { match, delArticle, history } = this.props;\n    const { slug } = match.params;\n    delArticle(slug);\n    history.push('/blog');\n  };\n\n  render() {\n    const { article, isLoading } = this.props;\n\n    if (!navigator.onLine) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <>\n        <StyledArticle>\n          {isLoading && <Loader />}\n          {!isLoading && size(article) && (\n            <>\n              <Banner>\n                <Container>\n                  <ArticleTitle>{article.title}</ArticleTitle>\n                  <ArticleMeta>\n                    <div>\n                      <AvatarAuthorArticle>\n                        <img width=\"45px\" height=\"45px\" src={article.author.image} alt=\"\" />\n                      </AvatarAuthorArticle>\n                      <Info>\n                        <NameAuthorArticle>{article.author.username}</NameAuthorArticle>\n                        <DateArticle>\n                          {`Created ${formatDistance(new Date(article.createdAt), new Date(), {\n                            addSuffix: true,\n                          })}`}\n                        </DateArticle>\n                      </Info>\n                    </div>\n                    {!isLoading && this.isAuthor() && (\n                      <span>\n                        <ButtonEdit to={`/blog/articles/${article.slug}/edit`}>\n                          Edit Article\n                        </ButtonEdit>\n                        <ButtonDelete onClick={this.handleClickButtonDelete}>\n                          Delete Article\n                        </ButtonDelete>\n                      </span>\n                    )}\n                  </ArticleMeta>\n                </Container>\n              </Banner>\n              <ArticleContent>\n                <Container>\n                  <ArticleBody>\n                    <BodyWrap>\n                      <Body>{article.body}</Body>\n                    </BodyWrap>\n                    <AddToFavorites\n                      isFavorited={article.favorited}\n                      favoritesCount={article.favoritesCount}\n                      slug={article.slug}\n                    />\n                  </ArticleBody>\n                  <Taglist tags={article.tagList} />\n                </Container>\n              </ArticleContent>\n            </>\n          )}\n        </StyledArticle>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user, singleArticle }) => {\n  return {\n    isLoading: singleArticle.loading,\n    article: singleArticle.article,\n    currentUser: user.currentUser,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    showArticle: slug => dispatch(getArticle(slug)),\n    delArticle: slug => dispatch(deleteArticle(slug)),\n    emptyArticle: () => dispatch(cleanArticle()),\n  };\n};\n\nArticle.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  article: PropTypes.objectOf(PropTypes.any),\n  currentUser: PropTypes.objectOf(PropTypes.any).isRequired,\n  showArticle: PropTypes.func.isRequired,\n  delArticle: PropTypes.func.isRequired,\n  emptyArticle: PropTypes.func.isRequired,\n};\n\nArticle.defaultProps = {\n  article: {},\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Article));\n","import { message } from 'antd';\nimport axios from '../axios';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport {\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_SUCCESS,\n  DELETE_ARTICLE_FAILURE,\n} from './actionTypes';\n\nexport const deleteArticleRequest = () => {\n  return {\n    type: DELETE_ARTICLE_REQUEST,\n  };\n};\n\nexport const deleteArticleSuccess = () => {\n  return {\n    type: DELETE_ARTICLE_SUCCESS,\n  };\n};\n\nexport const deleteArticleFailure = () => {\n  return {\n    type: DELETE_ARTICLE_FAILURE,\n  };\n};\n\nexport const deleteArticle = slug => async dispatch => {\n  dispatch(deleteArticleRequest());\n  if (navigator.onLine) {\n    try {\n      const response = await axios.delete(`/articles/${slug}`);\n      if (response.status === 200) {\n        dispatch(deleteArticleSuccess());\n      }\n    } catch (error) {\n      showMessageNetError(error);\n    }\n  } else {\n    dispatch(deleteArticleFailure());\n    message.error('Please check your network connectivity');\n  }\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport size from 'lodash/size';\nimport { message, Input, Button } from 'antd';\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport * as Yup from 'yup';\n\nimport styled from 'styled-components/macro';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport axios from '../axios';\n\nimport { getArticleSuccess } from '../actions/getArticle';\nimport cleanArticle from '../actions/cleanArticle';\n\nconst { TextArea } = Input;\n\nconst StyledCreateArticle = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ArticleForm = styled.div`\n  margin-top: 35px;\n`;\n\nconst Container = styled.div`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n\nconst TagInput = ({ field, ...props }) => {\n  return (\n    <>\n      <Input {...field} {...props} />\n    </>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required'),\n  tagList: Yup.array().of(Yup.string()),\n});\n\nclass CreateArticle extends Component {\n  state = {\n    isSubmitted: false,\n  };\n\n  componentDidMount() {\n    const { emptyArticle } = this.props;\n    emptyArticle();\n  }\n\n  handleSubmit = async (values, actions) => {\n    const { addArticle } = this.props;\n    if (navigator.onLine) {\n      try {\n        const response = await axios.post('/articles', { article: values });\n        if (response.status === 200) {\n          const article = await response.data.article;\n          addArticle(article);\n          this.setState({ isSubmitted: true });\n        }\n      } catch (error) {\n        actions.setSubmitting(false);\n        this.setState({ isSubmitted: false });\n        if (error.response.status === 422) {\n          actions.setErrors(error.response.data.errors);\n        } else {\n          showMessageNetError(error);\n        }\n      }\n    } else {\n      actions.setSubmitting(false);\n      this.setState({ isSubmitted: false });\n      message.error('Please check your network connectivity');\n    }\n  };\n\n  render() {\n    const { article } = this.props;\n    const { isSubmitted } = this.state;\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      return <Redirect to=\"/blog/\" />;\n    }\n\n    if (isSubmitted && size(article)) {\n      return <Redirect to={`/blog/articles/${article.slug}`} />;\n    }\n    return (\n      <>\n        <StyledCreateArticle>\n          <ArticleForm>\n            <Container>\n              <Formik\n                initialValues={{\n                  title: '',\n                  description: '',\n                  body: '',\n                  tagList: [],\n                }}\n                onSubmit={(values, actions) => this.handleSubmit(values, actions)}\n                validationSchema={validationSchema}\n              >\n                {({\n                  handleSubmit,\n                  values,\n                  handleChange,\n                  handleBlur,\n                  touched,\n                  errors,\n                  isSubmitting,\n                }) => {\n                  return (\n                    <Form onSubmit={handleSubmit}>\n                      <FormItem>\n                        <Input\n                          name=\"title\"\n                          placeholder=\"Article Title\"\n                          value={values.title}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.title && errors.title && (\n                          <ErrorMessage>{`title ${errors.title}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FormItem>\n                        <Input\n                          name=\"description\"\n                          placeholder=\"What is this article about?\"\n                          value={values.description}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.description && errors.description && (\n                          <ErrorMessage>{`description ${errors.description}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FormItem>\n                        <TextArea\n                          name=\"body\"\n                          placeholder=\"Write your article in (markdown)\"\n                          rows={10}\n                          allowClear\n                          value={values.body}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.body && errors.body && (\n                          <ErrorMessage>{`body ${errors.body}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FieldArray\n                        name=\"tagList\"\n                        render={arrayHelpers => (\n                          <div>\n                            {values.tagList && values.tagList.length > 0 ? (\n                              values.tagList.map((tag, index) => (\n                                // eslint-disable-next-line react/no-array-index-key\n                                <FormItem key={index}>\n                                  <Field\n                                    name={`tagList.${index}`}\n                                    placeholder=\"Enter tags\"\n                                    component={TagInput}\n                                  />\n                                  <Button onClick={() => arrayHelpers.remove(index)}>-</Button>\n                                  <Button onClick={() => arrayHelpers.insert(index, '')}>+</Button>\n                                </FormItem>\n                              ))\n                            ) : (\n                              <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                Add a tag\n                              </Button>\n                            )}\n                          </div>\n                        )}\n                      />\n                      <ButtonWrap>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n                          Publish Article\n                        </Button>\n                      </ButtonWrap>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Container>\n          </ArticleForm>\n        </StyledCreateArticle>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ singleArticle }) => {\n  return {\n    article: singleArticle.article,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addArticle: values => dispatch(getArticleSuccess(values)),\n    emptyArticle: () => dispatch(cleanArticle()),\n  };\n};\n\nCreateArticle.propTypes = {\n  article: PropTypes.objectOf(PropTypes.any).isRequired,\n  addArticle: PropTypes.func.isRequired,\n  emptyArticle: PropTypes.func.isRequired,\n};\n\nTagInput.propTypes = {\n  field: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArticle);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport pick from 'lodash/pick';\nimport size from 'lodash/size';\nimport { message, Input, Button } from 'antd';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport * as Yup from 'yup';\n\nimport styled from 'styled-components/macro';\nimport showMessageNetError from '../utils/showMessageNetError';\n\nimport axios from '../axios';\n\nimport { getArticleSuccess, getArticle } from '../actions/getArticle';\nimport cleanArticle from '../actions/cleanArticle';\n\nconst { TextArea } = Input;\n\nconst StyledEditArticle = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ArticleForm = styled.div`\n  margin-top: 35px;\n`;\n\nconst Container = styled.div`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n\nconst TagInput = ({ field, ...props }) => {\n  return (\n    <>\n      <Input {...field} {...props} />\n    </>\n  );\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required'),\n  tagList: Yup.array().of(Yup.string()),\n});\n\nclass EditArticle extends Component {\n  state = {\n    isSubmitted: false,\n  };\n\n  componentDidMount = () => {\n    const { match, fetchArticle } = this.props;\n    const { slug } = match.params;\n    fetchArticle(slug);\n  };\n\n  setUpdateValuesForm() {\n    const { article } = this.props;\n    if (size(article)) {\n      const updateValuesForm = pick(article, ['title', 'description', 'body', 'tagList']);\n      return updateValuesForm;\n    }\n    return {\n      title: '',\n      description: '',\n      body: '',\n      tagList: [],\n    };\n  }\n\n  handleSubmit = async (values, actions) => {\n    const { match, updateArticle } = this.props;\n    const { slug } = match.params;\n    if (navigator.onLine) {\n      try {\n        const response = await axios.put(`/articles/${slug}`, { article: values });\n        if (response.status === 200) {\n          const article = await response.data.article;\n          updateArticle(article);\n          this.setState({ isSubmitted: true });\n        }\n      } catch (error) {\n        actions.setSubmitting(false);\n        this.setState({ isSubmitted: false });\n        if (error.response.status === 422) {\n          actions.setErrors(error.response.data.errors);\n        } else {\n          showMessageNetError(error);\n        }\n      }\n    } else {\n      actions.setSubmitting(false);\n      this.setState({ isSubmitted: false });\n      message.error('Please check your network connectivity');\n    }\n  };\n\n  render() {\n    const { article } = this.props;\n    const { isSubmitted } = this.state;\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      return <Redirect to=\"/blog/\" />;\n    }\n\n    if (isSubmitted && size(article)) {\n      return <Redirect to={`/blog/articles/${article.slug}`} />;\n    }\n\n    return (\n      <>\n        <StyledEditArticle>\n          <ArticleForm>\n            <Container>\n              <Formik\n                initialValues={this.setUpdateValuesForm()}\n                onSubmit={(values, actions) => this.handleSubmit(values, actions)}\n                validationSchema={validationSchema}\n              >\n                {({\n                  handleSubmit,\n                  values,\n                  handleChange,\n                  handleBlur,\n                  touched,\n                  errors,\n                  isSubmitting,\n                }) => {\n                  return (\n                    <Form onSubmit={handleSubmit}>\n                      <FormItem>\n                        <Input\n                          name=\"title\"\n                          placeholder=\"Article Title\"\n                          value={values.title}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.title && errors.title && (\n                          <ErrorMessage>{`title ${errors.title}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FormItem>\n                        <Input\n                          name=\"description\"\n                          placeholder=\"What is this article about?\"\n                          value={values.description}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.description && errors.description && (\n                          <ErrorMessage>{`description ${errors.description}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FormItem>\n                        <TextArea\n                          name=\"body\"\n                          placeholder=\"Write your article in (markdown)\"\n                          rows={10}\n                          allowClear\n                          value={values.body}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                        />\n                        {touched.body && errors.body && (\n                          <ErrorMessage>{`body ${errors.body}`}</ErrorMessage>\n                        )}\n                      </FormItem>\n                      <FieldArray\n                        name=\"tagList\"\n                        render={arrayHelpers => (\n                          <div>\n                            {values.tagList && values.tagList.length > 0 ? (\n                              values.tagList.map((tag, index) => (\n                                // eslint-disable-next-line react/no-array-index-key\n                                <FormItem key={index}>\n                                  <Field\n                                    name={`tagList.${index}`}\n                                    placeholder=\"Enter tags\"\n                                    component={TagInput}\n                                  />\n                                  <Button onClick={() => arrayHelpers.remove(index)}>-</Button>\n                                  <Button onClick={() => arrayHelpers.insert(index, '')}>+</Button>\n                                </FormItem>\n                              ))\n                            ) : (\n                              <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                                Add a tag\n                              </Button>\n                            )}\n                          </div>\n                        )}\n                      />\n                      <ButtonWrap>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n                          Publish Article\n                        </Button>\n                      </ButtonWrap>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Container>\n          </ArticleForm>\n        </StyledEditArticle>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ singleArticle }) => {\n  return {\n    article: singleArticle.article,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateArticle: values => dispatch(getArticleSuccess(values)),\n    fetchArticle: slug => dispatch(getArticle(slug)),\n    emptyArticle: () => dispatch(cleanArticle()),\n  };\n};\n\nEditArticle.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  article: PropTypes.objectOf(PropTypes.any).isRequired,\n  fetchArticle: PropTypes.func.isRequired,\n  updateArticle: PropTypes.func.isRequired,\n};\n\nTagInput.propTypes = {\n  field: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditArticle);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { SignIn, SignUp, GlobalFeed, Article, CreateArticle, EditArticle } from '../pages';\n\nconst Content = () => {\n  return (\n    <Switch>\n      <Route path=\"/blog/\" component={GlobalFeed} exact />\n      <Route path=\"/blog/login\" component={SignIn} />\n      <Route path=\"/blog/signup\" component={SignUp} />\n      <Route path=\"/blog/articles/new\" component={CreateArticle} />\n      <Route path=\"/blog/articles/:slug/edit\" component={EditArticle} />\n      <Route path=\"/blog/articles/:slug\" component={Article} />\n    </Switch>\n  );\n};\n\nexport default Content;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport styled from 'styled-components/macro';\nimport GlobalStyle from './GlobalStyle';\n\nimport Loader from './Loader';\nimport NavBar from './NavBar';\nimport Content from './Content';\n\nimport { getUser } from '../actions/getUser';\n\nconst Page = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #1890ff;\n  color: #ffffff;\n  padding: 0 20px;\n`;\n\nclass App extends Component {\n  componentDidMount = () => {\n    const { getCurrentUser } = this.props;\n    getCurrentUser();\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <>\n        <GlobalStyle />\n        <Router>\n          <Page>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <>\n                <Header>\n                  <NavBar />\n                </Header>\n                <Content />\n              </>\n            )}\n          </Page>\n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    isLoading: user.loading,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUser: () => dispatch(getUser()),\n});\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  getCurrentUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILURE,\n  LOGOUT_USER,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  currentUser: {},\n  loggedIn: false,\n  loading: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_USER_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.user,\n        loggedIn: !!localStorage.getItem('token'),\n        loading: false,\n      };\n    case GET_USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case LOGOUT_USER:\n      return {\n        ...state,\n        currentUser: {},\n        loggedIn: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_ARTICLES_REQUEST,\n  GET_ARTICLES_SUCCESS,\n  GET_ARTICLES_FAILURE,\n  HANDLE_LIKE_ARTICLE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  articles: [],\n  articlesCount: null,\n  loading: false,\n};\n\nconst multipleArticlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ARTICLES_SUCCESS:\n      return {\n        ...state,\n        articles: action.articles,\n        articlesCount: action.articlesCount,\n        loading: false,\n      };\n    case GET_ARTICLES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case HANDLE_LIKE_ARTICLE:\n      return {\n        ...state,\n        articles: state.articles.map(article =>\n          article.slug === action.article.slug ? action.article : article\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default multipleArticlesReducer;\n","import {\n  GET_ARTICLE_REQUEST,\n  GET_ARTICLE_SUCCESS,\n  GET_ARTICLE_FAILURE,\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_SUCCESS,\n  DELETE_ARTICLE_FAILURE,\n  HANDLE_LIKE_ARTICLE,\n  CLEAN_ARTICLE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  article: {},\n  loading: false,\n};\n\nconst singleArticleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_ARTICLE_SUCCESS:\n      return {\n        ...state,\n        article: action.article,\n        loading: false,\n      };\n    case GET_ARTICLE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case DELETE_ARTICLE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case DELETE_ARTICLE_SUCCESS:\n      return {\n        ...state,\n        article: {},\n        loading: false,\n      };\n    case DELETE_ARTICLE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case HANDLE_LIKE_ARTICLE:\n      return {\n        ...state,\n        article: action.article,\n      };\n    case CLEAN_ARTICLE:\n      return {\n        ...state,\n        article: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default singleArticleReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport multipleArticlesReducer from './multipleArticles';\nimport singleArticleReducer from './singleArticle';\n\nexport default combineReducers({\n  user: userReducer,\n  multipleArticles: multipleArticlesReducer,\n  singleArticle: singleArticleReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}