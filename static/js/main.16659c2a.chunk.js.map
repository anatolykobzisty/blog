{"version":3,"sources":["components/GlobalStyle.jsx","components/ErrorIndicator.jsx","components/ErrorBoundry.jsx","actions/logout.js","actions/actionTypes.js","components/NavBar.jsx","actions/register.js","actions/login.js","actions/autoLogin.js","pages/Authentication.jsx","pages/GlobalFeed.jsx","components/Content.jsx","reducers/auth.js","reducers/index.js","store.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","styledNormalize","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","children","props","Component","logout","dispatch","localStorage","removeItem","type","StyledNavBar","styled","div","Logo","Link","Menu","ul","MenuItem","li","StyledNavLink","NavLink","Logout","Button","connect","isAutheticated","auth","token","authLogout","to","exact","onClick","registerSuccess","loginSuccess","autoLogin","getItem","StyledAuthentication","Container","PageTitle","h1","DescriptionLink","p","FormItem","ErrorMessage","span","validationSchema","Yup","shape","username","max","required","email","password","matches","Authentication","componentDidMount","authAutoLogin","handleFormSubmit","values","setErrors","isSignUp","authLogin","authRegister","match","path","pageTitle","descriptionLink","descriptionText","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","touched","errors","name","placeholder","value","onChange","onBlur","prefix","style","color","htmlType","block","a","loginData","user","axios","post","response","data","setItem","login","registerData","register","GlobalFeed","StyledContent","main","Content","component","initialState","authReducer","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","Header","Layout","Footer","StyledHeader","StyledFooter","ReactDOM","render","Date","getFullYear","document","getElementById"],"mappings":"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","file":"static/js/main.16659c2a.chunk.js","sourcesContent":["import styledNormalize from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  ${styledNormalize}\n  \n  * {\n    box-sizing: border-box;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n\n  ul,\n  ol,\n  li {\n    display: block;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\n\nconst ErrorIndicator = () => {\n  return <div>Error</div>;\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ErrorIndicator from './ErrorIndicator';\n\nclass ErrorBoundry extends Component {\n  state = { hasError: false };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    if (hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return children;\n  }\n}\n\nErrorBoundry.propTypes = {\n  children: PropTypes.arrayOf.isRequired,\n};\n\nexport default ErrorBoundry;\n","import { LOGOUT_SUCCESS } from './actionTypes';\n\nexport const logoutSuccess = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem('token');\n  dispatch(logoutSuccess());\n};\n","export const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\n\nimport styled from 'styled-components/macro';\n\nimport { logout } from '../actions/logout';\n\nconst StyledNavBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Logo = styled(Link)`\n  font-weight: bold;\n  color: white;\n  font-size: 25px;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Menu = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst MenuItem = styled.li`\n  margin-right: 10px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: white;\n  :hover {\n    color: black;\n  }\n`;\n\nconst Logout = styled(Button)`\n  margin-left: 30px;\n`;\n\nconst NavBar = ({ isAutheticated, authLogout }) => {\n  return (\n    <StyledNavBar>\n      <Logo to=\"/blog\">Blog</Logo>\n      <Menu>\n        <MenuItem>\n          <StyledNavLink to=\"/blog\" exact>\n            Home\n          </StyledNavLink>\n        </MenuItem>\n        {isAutheticated ? (\n          <Logout onClick={() => authLogout()}>Logout</Logout>\n        ) : (\n          <>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/login\">Sign in</StyledNavLink>\n            </MenuItem>\n            <MenuItem>\n              <StyledNavLink to=\"/blog/signup\">Sign up</StyledNavLink>\n            </MenuItem>\n          </>\n        )}\n      </Menu>\n    </StyledNavBar>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  return { isAutheticated: !!auth.token };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogout: () => dispatch(logout()),\n  };\n};\n\nNavBar.propTypes = {\n  isAutheticated: PropTypes.bool.isRequired,\n  authLogout: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import axios from 'axios';\nimport { REGISTER_SUCCESS } from './actionTypes';\n\nexport const registerSuccess = token => {\n  return {\n    type: REGISTER_SUCCESS,\n    token,\n  };\n};\n\nexport const register = ({ username, email, password }, setErrors) => async dispatch => {\n  // dispatch(registerRequest());\n  const registerData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post(\n      'https://conduit.productionready.io/api/users/',\n      registerData\n    );\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(registerSuccess(token));\n  } catch (error) {\n    setErrors({ ...error.response.data.errors });\n    // dispatch(registerFailure());\n  }\n};\n","import axios from 'axios';\nimport { LOGIN_SUCCESS } from './actionTypes';\n\nexport const loginSuccess = token => {\n  return {\n    type: LOGIN_SUCCESS,\n    token,\n  };\n};\n\nexport const login = ({ email, password }, setErrors) => async dispatch => {\n  // dispatch(registerRequest());\n  const loginData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  try {\n    const response = await axios.post(\n      'https://conduit.productionready.io/api/users/login/',\n      loginData\n    );\n    const user = await response.data.user;\n    const token = await user.token;\n    localStorage.setItem('token', token);\n    dispatch(loginSuccess(token));\n  } catch (error) {\n    setErrors({ ...error.response.data.errors });\n    // dispatch(registerFailure());\n  }\n};\n","import { logout } from './logout';\nimport { loginSuccess } from './login';\n\nconst autoLogin = () => dispatch => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    dispatch(logout());\n  } else {\n    dispatch(loginSuccess(token));\n  }\n};\n\nexport default autoLogin;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { Icon, Input, Button } from 'antd';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport styled from 'styled-components/macro';\n\nimport { register } from '../actions/register';\nimport { login } from '../actions/login';\nimport autoLogin from '../actions/autoLogin';\n\nconst StyledAuthentication = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  color: #1890ff;\n  font-size: 40px;\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst DescriptionLink = styled.p`\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst FormItem = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n`;\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Required'),\n  password: Yup.string()\n    .matches(\n      /^(?=^.{8,40}$)[0-9a-zA-Z](?=.*[A-Z])(?=.*[0-9])/,\n      'The password has to contain: A-Z, a-z, 0-9'\n    )\n    .required('Required'),\n});\n\nclass Authentication extends Component {\n  componentDidMount = () => {\n    const { authAutoLogin } = this.props;\n    authAutoLogin();\n  };\n\n  handleFormSubmit = (values, setErrors, isSignUp) => {\n    const { authLogin, authRegister } = this.props;\n    if (isSignUp) {\n      authRegister(values, setErrors);\n    } else {\n      authLogin(values, setErrors);\n    }\n  };\n\n  render() {\n    const { match, isAutheticated } = this.props;\n    const isSignUp = match.path === '/blog/signup';\n    const pageTitle = isSignUp ? 'Sign Up' : 'Sign In';\n    const descriptionLink = isSignUp ? '/blog/login' : '/blog/signup';\n    const descriptionText = isSignUp ? 'Have an account?' : 'Need an account?';\n\n    if (isAutheticated) {\n      return <Redirect to=\"/blog\" />;\n    }\n\n    return (\n      <StyledAuthentication>\n        <Container>\n          <PageTitle>{pageTitle}</PageTitle>\n          <DescriptionLink>\n            <Link to={descriptionLink}>{descriptionText}</Link>\n          </DescriptionLink>\n          <Formik\n            initialValues={{\n              username: 'noname2020',\n              email: 'noname2020@mail.com',\n              password: '8Nkl8dsp',\n            }}\n            onSubmit={(values, { setErrors }) => this.handleFormSubmit(values, setErrors, isSignUp)}\n            validationSchema={validationSchema}\n          >\n            {({ handleSubmit, values, handleChange, handleBlur, touched, errors }) => {\n              return (\n                <Form onSubmit={handleSubmit}>\n                  {isSignUp && (\n                    <FormItem>\n                      <Input\n                        type=\"user\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        value={values.username}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      />\n                      {touched.username && errors.username && (\n                        <ErrorMessage>{errors.username}</ErrorMessage>\n                      )}\n                    </FormItem>\n                  )}\n                  <FormItem>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.email && errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    />\n                    {touched.password && errors.password && (\n                      <ErrorMessage>{errors.password}</ErrorMessage>\n                    )}\n                  </FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\" block>\n                    {pageTitle}\n                  </Button>\n                </Form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </StyledAuthentication>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => {\n  return { isAutheticated: !!auth.token };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authLogin: (values, setErrors) => dispatch(login(values, setErrors)),\n    authRegister: (values, setErrors) => dispatch(register(values, setErrors)),\n    authAutoLogin: () => dispatch(autoLogin()),\n  };\n};\n\nAuthentication.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  isAutheticated: PropTypes.bool.isRequired,\n  authLogin: PropTypes.func.isRequired,\n  authRegister: PropTypes.func.isRequired,\n  authAutoLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\n","import React from 'react';\n\nconst GlobalFeed = () => {\n  return <div>GlobalFeed</div>;\n};\n\nexport default GlobalFeed;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport styled from 'styled-components/macro';\n\nimport { Authentication, GlobalFeed } from '../pages';\n\nconst StyledContent = styled.main`\n  background: #ffffff;\n  padding: 0 150px;\n`;\n\nconst Content = () => {\n  return (\n    <StyledContent>\n      <Switch>\n        <Route path=\"/blog\" component={GlobalFeed} exact />\n        <Route path=\"/blog/login\" component={Authentication} />\n        <Route path=\"/blog/signup\" component={Authentication} />\n      </Switch>\n    </StyledContent>\n  );\n};\n\nexport default Content;\n","import { REGISTER_SUCCESS, LOGIN_SUCCESS, LOGOUT_SUCCESS } from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport styled from 'styled-components/macro';\nimport GlobalStyle from './components/GlobalStyle';\n\nimport ErrorBoundry from './components/ErrorBoundry';\nimport NavBar from './components/NavBar';\nimport Content from './components/Content';\n\nimport store from './store';\n\nconst { Header, Footer } = Layout;\n\nconst StyledHeader = styled(Header)`\n  background: #1890ff;\n  color: #ffffff;\n  padding: 0 150px;\n`;\n\nconst StyledFooter = styled(Footer)`\n  position: fixed;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  color: #ffffff;\n  text-align: center;\n  background: #1890ff;\n`;\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <ErrorBoundry>\n        <GlobalStyle />\n        <Router>\n          <Layout>\n            <StyledHeader>\n              <NavBar />\n            </StyledHeader>\n            <Content />\n            <StyledFooter>Blog © {new Date().getFullYear()}</StyledFooter>\n          </Layout>\n        </Router>\n      </ErrorBoundry>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}